{
  "name": "skeleton",
  "description": "Express 3.0 framework-less app structure generator",
  "version": "0.1.1",
  "author": {
    "name": "Etienne Lemay"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/EtienneLem/skeleton.git"
  },
  "engines": {
    "node": "*"
  },
  "dependencies": {
    "coffee-script": "1.3.x",
    "mkdirp": "0.3.x",
    "colors": "0.6.x"
  },
  "devDependencies": {
    "should": "0.6.x",
    "mocha": "1.3.x",
    "rimraf": "2.0.x"
  },
  "keywords": [
    "skeleton",
    "express",
    "structure",
    "generator"
  ],
  "bin": {
    "skeleton": "./bin/skeleton"
  },
  "scripts": {
    "test": "cake test"
  },
  "readme": "![Skeleton](https://s3.amazonaws.com/skeleton/skeleton.png)\n\n[Express](https://github.com/visionmedia/express) 3.0 framework-less app structure generator<br>\n[Documentation](http://etiennelem.github.com/skeleton) •\n[Blog post](http://heliom.ca/en/blog/skeleton)\n\n## Usage\n### Installation\n```sh\n$ npm install -g skeleton\n```\n\n### Generate a project\n```sh\n$ skeleton myapp\n$ skeleton --directory ~/Desktop myapp\n$ skeleton --renderer jade --css less myapp\n$ skeleton myapp --js js\n```\n\n### Start your application\n```sh\n$ node server.js\n$ node server.js -p 1337\n```\n\n### Help\n```sh\n$ skeleton --help\n\n  Usage: skeleton [options] myapp\n\n  -h, --help       display this help message\n  -v, --version    display the version number\n  -f, --force      force on non-empty directory\n  -n, --nolog      do not print any message to process.stdout\n  -d, --directory  the output directory (default: ./)\n  -r, --renderer   template engine [ejs, jade] (default: ejs)\n  -c, --css        stylesheet engine [stylus, less, css] (default: stylus)\n  -j, --js         javascript engine [coffee, js] (default: coffee)\n```\n\n## Running tests\n```sh\n$ npm test\n```\n\n## Features\n* Clean encapsulated Object-Oriented framework base (see [#not-quite-a-framework](#not-quite-a-framework))\n* CoffeeScript only. No js/compilation whatsoever\n* Automatically load `lib/**` & `app/controllers/**` files\n* Use [connect-assets](https://github.com/TrevorBurnham/connect-assets); The *“Rails 3.1-style asset pipeline for Node.js”*\n* Partials/layout ([removed from Express 3.0](https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x)) via [express-partials](https://github.com/publicclass/express-partials)*\n  * *At least until layout support is added to [ejs](https://github.com/visionmedia/ejs)\n  * *Not in the package when using [Jade](https://github.com/visionmedia/jade)\n* Heroku-ready (see https://devcenter.heroku.com/articles/nodejs)\n\n### Not quite a framework\nI guess this could be considered the generator part of a framework.\nIt does create a view-controller user interface which does a bunch of things a framework would do, but once your project is generated it is up to you.\n\n## Generated app structure\nSee [example](https://github.com/EtienneLem/skeleton/tree/master/example).\n```\nmyapp\n├─┬ app\n│ ├── app.coffee\n│ ├─┬ assets\n│ │ ├─┬ css\n│ │ │ └── styles.styl\n│ │ └─┬ js\n│ │   └── scripts.coffee\n│ ├─┬ controllers\n│ │ └── application_controller.coffee\n│ ├─┬ helpers\n│ │ └── index.coffee\n│ ├─┬ routes\n│ │ └── index.coffee\n│ └─┬ views\n│   ├── 404.ejs\n│   ├── index.ejs\n│   └── layout.ejs\n├─┬ config\n│ └── boot.coffee\n├─┬ lib\n│ └─┬ myapp\n│   └── my_custom_class.coffee\n├── package.json\n├── Procfile\n├── public\n├── README.md\n└── server.js\n```\n\n## Todo\n* Add [Haml](https://github.com/visionmedia/haml.js) support\n* Add [Sass](https://github.com/visionmedia/sass.js) support\n\n## License\nCopyright (c) 2012 Etienne Lemay etienne@heliom.ca, [@EtienneLem](https://twitter.com/EtienneLem)\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/EtienneLem/skeleton/issues"
  },
  "homepage": "https://github.com/EtienneLem/skeleton",
  "_id": "skeleton@0.1.1",
  "dist": {
    "shasum": "205b78538535b74f69f0dc1e92a69bc01364a44c"
  },
  "_from": "skeleton@",
  "_resolved": "https://registry.npmjs.org/skeleton/-/skeleton-0.1.1.tgz"
}
